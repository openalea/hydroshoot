##### Primitives 3D (PlantGL)
##### A modified module from the TopVine Package (G. Louarn)

from numpy import tan, sin, cos, array
from openalea.plantgl.all import *


def quadform(p1, p2, p3, p4):
    """ renvoie le TriangleSet a 4 points """
    points = Point3Array([Vector3(p1[0], p1[1], p1[2]), Vector3(p2[0], p2[1], p2[2]), Vector3(p3[0], p3[1], p3[2]),
                          Vector3(p4[0], p4[1], p4[2])])
    indices = Index3Array([Index3(0, 1, 3), Index3(1, 2, 3)])
    return TriangleSet(points, indices)


def en0(n=6):
    return Cylinder(1, 1, True, n)


def leaf0(l=1.):
    points = Point3Array([Vector3(0, 9.8, 0), Vector3(3.7, 6.3, 0), Vector3(2.3, 3.9, 0),
                          Vector3(5.4, 6.2, 0), Vector3(5.9, 3.2, 0), Vector3(4.6, 0.1, 0),
                          Vector3(6.4, -1.6, 0), Vector3(1, -3.7, 0), Vector3(0, 0, 0),
                          Vector3(-1, -3.7, 0), Vector3(-6.4, -1.6, 0),
                          Vector3(-4.6, 0.1, 0), Vector3(-5.9, 3.2, 0),
                          Vector3(-5.4, 6.2, 0), Vector3(-2.3, 3.9, 0), Vector3(-3.7, 6.3, 0)])

    indices = Index3Array([Index3(0, 1, 8), Index3(15, 0, 8), Index3(8, 11, 14),
                           Index3(11, 12, 14), Index3(12, 13, 14), Index3(10, 11, 8),
                           Index3(8, 9, 10), Index3(2, 3, 4), Index3(2, 4, 5),
                           Index3(2, 5, 8), Index3(8, 5, 6), Index3(8, 6, 7)])

    f = TriangleSet(points, indices)
    return Scaled(Vector3(0.01 * l, 0.01 * l, 0.01 * l), f)


def transformation(obj, sx, sy, sz, rx, ry, rz, tx, ty, tz):
    """ Return a scaled, rotated and translated 3D object - Similar to 'transformation' in PovRay """
    s_obj = Scaled(Vector3(sx, sy, sz), obj)
    r_obj = EulerRotated(rx, ry, rz, s_obj)
    t_obj = Translated(Vector3(tx, ty, tz), r_obj)
    return t_obj


def bunch(MaScene, coord, opt="s", id_='200000000000'):  # , baie_diam=1.):
    """ Add a bunch (series of cyclynders if opt = 'c' / of spheres if opt = 's') at insertion point coord (x,y,z) in scene MaScene """
    tab_grap = [[0.0, 0.0, -3.6], [0.0, 0.6, -2.8], [-0.5196, -0.3, -2.8], [0.5196, -0.3, -2.8], [0.8, 0.0, -2.0],
                [0.2472, 0.7608, -2.0], [-0.6472, 0.4702, -2.0], [-0.6472, -0.4702, -2.0], [0.2472, -0.7608, -2.0],
                [0.55, 0.9526, -1.2], [-0.2847, 1.0625, -1.2], [-0.9527, 0.55, -1.2], [-1.0625, -0.2847, -1.2],
                [-0.55, -0.9526, -1.2], [0.2847, -1.06252, -1.2], [0.9526, -0.55, -1.2], [1.0625, 0.2847, -1.2],
                [1.2, 0.0, -0.4], [0.9708, 0.7053, -0.4], [0.3708, 1.1413, -0.4], [-0.3708, 1.1413, -0.4],
                [-0.9708, 0.7053, -0.4], [-1.2, 0, -0.4], [-0.9708, -0.7053, -0.4], [-0.3708, -1.1413, -0.4],
                [0.3708, -1.1413, -0.4], [0.9708, -0.7053, -0.4], [0.6, 0.0, 0.0], [0.1854, 0.5706, 0.0],
                [-0.4854, 0.3527, 0.0], [-0.4854, -0.3526, 0.0], [0.1854, -0.5706, 0.0]]
    for i in range(len(tab_grap)):
        if opt == 'c':
            obj = transformation(Cylinder(0.5, 1., True, 4), 1, 1, 1, 0, 0, 0, tab_grap[i][0] / 1.5 + coord[0],
                                 tab_grap[i][1] / 1.5 + coord[1], tab_grap[i][2] / 1.5 + coord[2])
            obj.setName(id_)
            sobj = Shape(obj, Material(Color3(160, 30, 109)))
            MaScene.add(sobj)
        if opt == 's':
            obj = transformation(Sphere(0.5), 1, 1, 1, 0, 0, 0, tab_grap[i][0] / 1.5 + coord[0],
                                 tab_grap[i][1] / 1.5 + coord[1], tab_grap[i][2] / 1.5 + coord[2])
            obj.setName(id_)
            sobj = Shape(obj, Material(Color3(160, 30, 109)))
            MaScene.add(sobj)

    return MaScene

    # si possible faire un "unit" definir un bunch0


def trunk(MaScene, coord, type):
    """ Add a trunk (series of sphere at insertion point coord (x,y,z) in scene MaScene; possible trunk types: 'cordon' / 'gobelet' """
    if type == 'cordon':
        # double cordon trunk
        Tab_tronc = [[0.0, 0.0, 0.0, 10.827999999999999], [0.0, 0.20000000000000001, 1.7, 10.382],
                     [0.0, 0.40000000000000002, 3.3999999999999999, 9.9359999999999999],
                     [0.0, 0.59999999999999998, 5.0999999999999996, 9.4900000000000002],
                     [0.0, 0.80000000000000004, 6.7999999999999998, 9.0449999999999999],
                     [0.0, 1.0, 8.5, 8.5990000000000002], [0.0, 1.2, 10.199999999999999, 8.1530000000000005],
                     [0.0, 1.3999999999999999, 11.9, 7.7069999999999999],
                     [0.0, 1.6000000000000001, 13.6, 7.2610000000000001], [0.0, 2.0, 17.0, 6.3689999999999998],
                     [1.25, 0.96499999999999997, 18.100000000000001, 6.3380000000000001],
                     [2.5, -0.070000000000000007, 19.199999999999999, 6.306],
                     [3.7490000000000001, -1.1040000000000001, 20.300000000000001, 6.274],
                     [4.9989999999999997, -2.1389999999999998, 21.399999999999999, 6.242],
                     [6.2489999999999997, -3.1739999999999999, 22.5, 6.21],
                     [7.4989999999999997, -4.2089999999999996, 23.600000000000001, 6.1779999999999999],
                     [8.7490000000000006, -5.2439999999999998, 24.699999999999999, 6.1459999999999999],
                     [9.9979999999999993, -6.2789999999999999, 25.800000000000001, 6.1150000000000002],
                     [11.247999999999999, -7.3129999999999997, 26.899999999999999, 6.0830000000000002],
                     [12.497999999999999, -8.3480000000000008, 28.0, 6.0510000000000002],
                     [12.113, -7.8499999999999996, 28.899999999999999, 6.1310000000000002],
                     [11.728, -7.3520000000000003, 29.800000000000001, 6.21],
                     [11.343999999999999, -6.8550000000000004, 30.699999999999999, 6.29],
                     [10.959, -6.3570000000000002, 31.600000000000001, 6.3689999999999998],
                     [10.574, -5.859, 32.5, 6.4489999999999998],
                     [10.19, -5.3609999999999998, 33.399999999999999, 6.5289999999999999],
                     [9.8049999999999997, -4.8630000000000004, 34.299999999999997, 6.6079999999999997],
                     [9.4199999999999999, -4.3659999999999997, 35.200000000000003, 6.6879999999999997],
                     [9.0359999999999996, -3.8679999999999999, 36.100000000000001, 6.7679999999999998],
                     [8.6509999999999998, -3.3700000000000001, 37.0, 6.8470000000000004],
                     [9.2959999999999994, -4.1680000000000001, 37.399999999999999, 6.7039999999999997],
                     [9.9410000000000007, -4.9649999999999999, 37.799999999999997, 6.5609999999999999],
                     [10.586, -5.7629999999999999, 38.200000000000003, 6.4169999999999998],
                     [11.231, -6.5609999999999999, 38.600000000000001, 6.274],
                     [11.875999999999999, -7.3579999999999997, 39.0, 6.1310000000000002],
                     [12.521000000000001, -8.1560000000000006, 39.399999999999999, 5.9870000000000001],
                     [13.166, -8.9540000000000006, 39.799999999999997, 5.8440000000000003],
                     [13.811, -9.7509999999999994, 40.200000000000003, 5.7009999999999996],
                     [14.456, -10.548999999999999, 40.600000000000001, 5.5570000000000004],
                     [15.101000000000001, -11.347, 41.0, 5.4139999999999997],
                     [16.609999999999999, -11.250999999999999, 41.899999999999999, 5.3179999999999996],
                     [18.119, -11.154999999999999, 42.799999999999997, 5.2229999999999999],
                     [19.626999999999999, -11.058999999999999, 43.700000000000003, 5.1269999999999998],
                     [21.135999999999999, -10.962999999999999, 44.600000000000001, 5.032],
                     [22.645, -10.867000000000001, 45.5, 4.9359999999999999],
                     [24.154, -10.771000000000001, 46.399999999999999, 4.8410000000000002],
                     [25.661999999999999, -10.675000000000001, 47.299999999999997, 4.7450000000000001],
                     [27.170999999999999, -10.579000000000001, 48.200000000000003, 4.6500000000000004],
                     [28.68, -10.483000000000001, 49.100000000000001, 4.5540000000000003],
                     [30.187999999999999, -10.387, 50.0, 4.4589999999999996],
                     [31.917999999999999, -9.3800000000000008, 50.700000000000003, 4.4589999999999996],
                     [33.648000000000003, -8.3729999999999993, 51.399999999999999, 4.4589999999999996],
                     [35.377000000000002, -7.3659999999999997, 52.100000000000001, 4.4589999999999996],
                     [37.106999999999999, -6.359, 52.799999999999997, 4.4589999999999996],
                     [38.837000000000003, -5.351, 53.5, 4.4589999999999996],
                     [40.566000000000003, -4.3440000000000003, 54.200000000000003, 4.4589999999999996],
                     [42.295999999999999, -3.3370000000000002, 54.899999999999999, 4.4589999999999996],
                     [44.026000000000003, -2.3300000000000001, 55.600000000000001, 4.4589999999999996],
                     [45.755000000000003, -1.323, 56.299999999999997, 4.4589999999999996],
                     [47.484999999999999, -0.315, 57.0, 4.4589999999999996],
                     [48.884, -0.14999999999999999, 57.100000000000001, 4.5540000000000003],
                     [50.283000000000001, 0.014999999999999999, 57.200000000000003, 4.6500000000000004],
                     [51.680999999999997, 0.18099999999999999, 57.299999999999997, 4.7450000000000001],
                     [53.079999999999998, 0.34599999999999997, 57.399999999999999, 4.8410000000000002],
                     [54.478999999999999, 0.51100000000000001, 57.5, 4.9359999999999999],
                     [55.878, 0.67700000000000005, 57.600000000000001, 5.032],
                     [57.277000000000001, 0.84199999999999997, 57.700000000000003, 5.1269999999999998],
                     [58.674999999999997, 1.0069999999999999, 57.799999999999997, 5.2229999999999999],
                     [60.073999999999998, 1.173, 57.899999999999999, 5.3179999999999996],
                     [61.472999999999999, 1.3380000000000001, 58.0, 5.4139999999999997],
                     [8.6509999999999998, -3.3700000000000001, 37.0, 6.8470000000000004],
                     [9.093, -4.0199999999999996, 37.799999999999997, 6.6719999999999997],
                     [9.5350000000000001, -4.6699999999999999, 38.600000000000001, 6.4969999999999999],
                     [9.9760000000000009, -5.3200000000000003, 39.399999999999999, 6.3220000000000001],
                     [10.417999999999999, -5.9699999999999998, 40.200000000000003, 6.1459999999999999],
                     [10.859999999999999, -6.6200000000000001, 41.0, 5.9710000000000001],
                     [11.302, -7.2699999999999996, 41.799999999999997, 5.7960000000000003],
                     [11.744, -7.9199999999999999, 42.600000000000001, 5.6210000000000004],
                     [12.185, -8.5700000000000003, 43.399999999999999, 5.4459999999999997],
                     [12.627000000000001, -9.2200000000000006, 44.200000000000003, 5.2709999999999999],
                     [13.069000000000001, -9.8699999999999992, 45.0, 5.0960000000000001],
                     [11.4, -9.3089999999999993, 45.799999999999997, 5.0960000000000001],
                     [9.7319999999999993, -8.7469999999999999, 46.600000000000001, 5.0960000000000001],
                     [8.0630000000000006, -8.1850000000000005, 47.399999999999999, 5.0960000000000001],
                     [6.3940000000000001, -7.6230000000000002, 48.200000000000003, 5.0960000000000001],
                     [4.726, -7.0620000000000003, 49.0, 5.0960000000000001],
                     [3.0569999999999999, -6.5, 49.799999999999997, 5.0960000000000001],
                     [1.3879999999999999, -5.9379999999999997, 50.600000000000001, 5.0960000000000001],
                     [-0.28000000000000003, -5.3760000000000003, 51.399999999999999, 5.0960000000000001],
                     [-1.9490000000000001, -4.8150000000000004, 52.200000000000003, 5.0960000000000001],
                     [-3.6179999999999999, -4.2530000000000001, 53.0, 5.0960000000000001],
                     [-5.6980000000000004, -3.9159999999999999, 53.0, 5.032],
                     [-7.7789999999999999, -3.5800000000000001, 53.0, 4.968],
                     [-9.859, -3.2429999999999999, 53.0, 4.9039999999999999],
                     [-11.94, -2.907, 53.0, 4.8410000000000002],
                     [-14.02, -2.5699999999999998, 53.0, 4.7770000000000001],
                     [-16.100000000000001, -2.2330000000000001, 53.0, 4.7130000000000001],
                     [-18.181000000000001, -1.897, 53.0, 4.6500000000000004],
                     [-20.260999999999999, -1.5600000000000001, 53.0, 4.5860000000000003],
                     [-24.422000000000001, -0.88700000000000001, 53.0, 4.4589999999999996],
                     [-26.373000000000001, -0.83399999999999996, 53.200000000000003, 4.3789999999999996],
                     [-28.324000000000002, -0.78100000000000003, 53.399999999999999, 4.2990000000000004],
                     [-30.276, -0.72699999999999998, 53.600000000000001, 4.2199999999999998],
                     [-32.226999999999997, -0.67400000000000004, 53.799999999999997, 4.1399999999999997],
                     [-34.177999999999997, -0.621, 54.0, 4.0609999999999999],
                     [-36.128999999999998, -0.56799999999999995, 54.200000000000003, 3.9809999999999999],
                     [-38.079999999999998, -0.51400000000000001, 54.399999999999999, 3.9009999999999998],
                     [-40.030999999999999, -0.46100000000000002, 54.600000000000001, 3.8220000000000001],
                     [-41.981999999999999, -0.40799999999999997, 54.799999999999997, 3.742],
                     [-43.933999999999997, -0.35499999999999998, 55.0, 3.6619999999999999],
                     [-43.933999999999997, -0.35499999999999998, 55.0, 3.6619999999999999]]
    elif type == 'gobelet':
        # gobelet trunk
        Tab_tronc = [[6.54, -7.1600000000000001, 0.0, 10.0], [6.54, -7.1600000000000001, 2.625, 10.0],
                     [6.54, -7.1600000000000001, 5.25, 10.0],
                     [7.3250000000000002, -7.1950000000000003, 8.2249999999999996, 9.5],
                     [8.1099999999999994, -7.2300000000000004, 11.199999999999999, 9.0],
                     [7.6600000000000001, -7.5049999999999999, 12.48, 8.0], [7.21, -7.7800000000000002, 13.76, 7.0],
                     [7.1900000000000004, -8.1850000000000005, 15.375, 7.5],
                     [7.1699999999999999, -8.5899999999999999, 16.989999999999998, 8.0],
                     [7.5750000000000002, -7.1200000000000001, 20.890000000000001, 8.5],
                     [7.9800000000000004, -5.6500000000000004, 24.789999999999999, 8.5],
                     [8.2899999999999991, -8.1699999999999999, 24.524999999999999, 8.5],
                     [8.5999999999999996, -10.69, 24.260000000000002, 8.5],
                     [6.5099999999999998, -9.1449999999999996, 24.440000000000001, 7.5],
                     [4.4199999999999999, -7.5999999999999996, 24.620000000000001, 6.5],
                     [2.3300000000000001, -6.0549999999999997, 24.800000000000001, 5.5],
                     [0.23999999999999999, -4.5099999999999998, 24.98, 4.5],
                     [0.98999999999999999, -3.2200000000000002, 25.329999999999998, 4.5],
                     [1.74, -1.9299999999999999, 25.68, 4.5],
                     [2.2549999999999999, -0.66000000000000003, 26.649999999999999, 4.5],
                     [2.77, 0.60999999999999999, 27.620000000000001, 4.5],
                     [2.6699999999999999, 1.95, 28.725000000000001, 4.5],
                     [2.5699999999999998, 3.29, 29.829999999999998, 4.5],
                     [1.4475, 3.8774999999999999, 30.559999999999999, 4.5],
                     [0.32500000000000001, 4.4649999999999999, 31.289999999999999, 4.5],
                     [-1.9199999999999999, 5.6399999999999997, 32.75, 4.5],
                     [-2.8149999999999999, 6.5099999999999998, 33.100000000000001, 4.5],
                     [-3.71, 7.3799999999999999, 33.450000000000003, 4.5],
                     [-3.8849999999999998, 8.4849999999999994, 35.060000000000002, 4.5],
                     [-4.0599999999999996, 9.5899999999999999, 36.670000000000002, 4.5],
                     [-4.0899999999999999, 10.645, 38.030000000000001, 4.5],
                     [-4.1200000000000001, 11.699999999999999, 39.390000000000001, 4.5],
                     [-4.1849999999999996, 12.27, 41.204999999999998, 4.5], [-4.25, 12.84, 43.020000000000003, 4.5],
                     [-4.29, 12.7675, 44.494999999999997, 4.5], [-4.3300000000000001, 12.695, 45.969999999999999, 4.5],
                     [-4.4100000000000001, 12.550000000000001, 48.920000000000002, 4.5],
                     [-4.1950000000000003, 11.875, 51.424999999999997, 4.5], [-3.98, 11.199999999999999, 53.93, 4.5],
                     [8.5999999999999996, -10.69, 24.260000000000002, 8.5],
                     [6.3174999999999999, -8.7874999999999996, 24.502500000000001, 7.375],
                     [4.0350000000000001, -6.8849999999999998, 24.745000000000001, 6.25],
                     [1.7524999999999999, -4.9824999999999999, 24.987500000000001, 5.125],
                     [-0.53000000000000003, -3.0800000000000001, 25.23, 4.0],
                     [0.28499999999999998, -2.2999999999999998, 25.704999999999998, 4.0],
                     [1.1000000000000001, -1.52, 26.18, 4.0], [2.415, -0.54500000000000004, 27.109999999999999, 4.0],
                     [3.73, 0.42999999999999999, 28.039999999999999, 4.0], [4.29, 1.76, 28.66, 4.0],
                     [4.8499999999999996, 3.0899999999999999, 29.280000000000001, 4.0],
                     [6.9199999999999999, 3.23, 28.135000000000002, 4.0],
                     [8.9900000000000002, 3.3700000000000001, 26.989999999999998, 4.0],
                     [11.215, 3.3849999999999998, 28.16, 4.0], [13.44, 3.3999999999999999, 29.329999999999998, 4.0],
                     [14.625, 3.1775000000000002, 31.317499999999999, 4.0], [15.81, 2.9550000000000001, 33.305, 4.0],
                     [16.995000000000001, 2.7324999999999999, 35.292499999999997, 4.0],
                     [18.18, 2.5099999999999998, 37.280000000000001, 4.0],
                     [18.640000000000001, 3.1699999999999999, 38.984999999999999, 4.0],
                     [19.100000000000001, 3.8300000000000001, 40.689999999999998, 4.0],
                     [20.135000000000002, 3.625, 41.609999999999999, 4.0],
                     [21.170000000000002, 3.4199999999999999, 42.530000000000001, 4.0],
                     [22.024999999999999, 2.915, 43.494999999999997, 4.0],
                     [22.879999999999999, 2.4100000000000001, 44.460000000000001, 4.0],
                     [23.184999999999999, 3.8900000000000001, 46.064999999999998, 4.0],
                     [23.489999999999998, 5.3700000000000001, 47.670000000000002, 4.0],
                     [23.899999999999999, 6.915, 48.924999999999997, 4.0],
                     [24.309999999999999, 8.4600000000000009, 50.18, 4.0],
                     [25.34, 8.2799999999999994, 51.045000000000002, 4.0],
                     [26.370000000000001, 8.0999999999999996, 51.909999999999997, 4.0],
                     [8.5999999999999996, -10.69, 24.260000000000002, 8.5],
                     [6.5674999999999999, -9.0150000000000006, 25.237500000000001, 7.375],
                     [4.5350000000000001, -7.3399999999999999, 26.215, 6.25],
                     [2.5024999999999999, -5.665, 27.192499999999999, 5.125],
                     [0.46999999999999997, -3.9900000000000002, 28.170000000000002, 4.0],
                     [1.0800000000000001, -2.4900000000000002, 28.515000000000001, 4.0],
                     [1.6899999999999999, -0.98999999999999999, 28.859999999999999, 4.0],
                     [3.3900000000000001, 0.20000000000000001, 29.245000000000001, 4.0],
                     [4.2400000000000002, 0.79500000000000004, 29.4375, 4.0],
                     [5.0899999999999999, 1.3899999999999999, 29.629999999999999, 4.0],
                     [8.2349999999999994, -0.38250000000000001, 29.305, 4.0],
                     [11.380000000000001, -2.1549999999999998, 28.98, 4.0],
                     [14.525, -3.9275000000000002, 28.655000000000001, 4.0],
                     [17.670000000000002, -5.7000000000000002, 28.329999999999998, 4.0],
                     [18.809999999999999, -6.4749999999999996, 29.465, 4.0],
                     [19.949999999999999, -7.25, 30.600000000000001, 4.0],
                     [21.489999999999998, -7.1449999999999996, 33.354999999999997, 4.0],
                     [23.030000000000001, -7.04, 36.109999999999999, 4.0],
                     [23.975000000000001, -8.2750000000000004, 37.640000000000001, 4.0],
                     [24.920000000000002, -9.5099999999999998, 39.170000000000002, 4.0],
                     [24.399999999999999, -9.9600000000000009, 41.575000000000003, 4.0],
                     [23.879999999999999, -10.41, 43.979999999999997, 4.0],
                     [23.324999999999999, -10.795, 45.515000000000001, 4.0], [22.77, -11.18, 47.049999999999997, 4.0],
                     [21.809999999999999, -11.725, 48.365000000000002, 4.0], [20.850000000000001, -12.27, 49.68, 4.0],
                     [8.5999999999999996, -10.69, 24.260000000000002, 8.5],
                     [7.1500000000000004, -9.1024999999999991, 23.432500000000001, 7.375],
                     [5.7000000000000002, -7.5149999999999997, 22.605, 6.25],
                     [4.25, -5.9275000000000002, 21.7775, 5.125],
                     [2.7999999999999998, -4.3399999999999999, 20.949999999999999, 4.0],
                     [2.395, -5.1950000000000003, 22.190000000000001, 4.0], [1.99, -6.0499999999999998, 23.43, 4.0],
                     [1.7350000000000001, -7.9299999999999997, 24.91, 4.0],
                     [1.48, -9.8100000000000005, 26.390000000000001, 4.0],
                     [3.3500000000000001, -10.295, 26.155000000000001, 4.0],
                     [5.2199999999999998, -10.779999999999999, 25.920000000000002, 4.0],
                     [6.5350000000000001, -11.48, 25.489999999999998, 4.0],
                     [7.8499999999999996, -12.18, 25.059999999999999, 4.0],
                     [9.1449999999999996, -13.035, 24.510000000000002, 4.0],
                     [10.44, -13.890000000000001, 23.960000000000001, 4.0],
                     [12.050000000000001, -14.425000000000001, 23.559999999999999, 4.0],
                     [13.66, -14.960000000000001, 23.16, 4.0], [15.779999999999999, -14.92, 22.350000000000001, 4.0],
                     [17.899999999999999, -14.880000000000001, 21.539999999999999, 4.0],
                     [18.800000000000001, -15.109999999999999, 22.43, 4.0], [19.699999999999999, -15.34, 23.32, 4.0],
                     [19.335000000000001, -15.475, 25.18, 4.0],
                     [18.969999999999999, -15.609999999999999, 27.039999999999999, 4.0],
                     [18.454999999999998, -16.370000000000001, 28.725000000000001, 4.0],
                     [17.940000000000001, -17.129999999999999, 30.41, 4.0],
                     [17.094999999999999, -17.285, 32.100000000000001, 4.0],
                     [16.25, -17.440000000000001, 33.789999999999999, 4.0],
                     [14.74, -16.649999999999999, 34.740000000000002, 4.0],
                     [13.23, -15.859999999999999, 35.689999999999998, 4.0],
                     [11.779999999999999, -14.039999999999999, 36.255000000000003, 4.0],
                     [10.33, -12.220000000000001, 36.82, 4.0], [8.5999999999999996, -10.69, 24.260000000000002, 8.5],
                     [6.8150000000000004, -9.1624999999999996, 23.552499999999998, 7.375],
                     [5.0300000000000002, -7.6349999999999998, 22.844999999999999, 6.25],
                     [3.2450000000000001, -6.1074999999999999, 22.137499999999999, 5.125],
                     [1.46, -4.5800000000000001, 21.43, 4.0], [1.105, -5.6900000000000004, 22.359999999999999, 4.0],
                     [0.75, -6.7999999999999998, 23.289999999999999, 4.0],
                     [0.255, -8.1400000000000006, 24.085000000000001, 4.0],
                     [0.0074999999999999997, -8.8100000000000005, 24.482500000000002, 4.0],
                     [-0.23999999999999999, -9.4800000000000004, 24.879999999999999, 4.0],
                     [-0.23499999999999999, -8.4774999999999991, 26.827500000000001, 4.0],
                     [-0.23000000000000001, -7.4749999999999996, 28.774999999999999, 4.0],
                     [-0.22500000000000001, -6.4725000000000001, 30.7225, 4.0],
                     [-0.22, -5.4699999999999998, 32.670000000000002, 4.0],
                     [1.1575, -6.4824999999999999, 32.962499999999999, 4.0],
                     [2.5350000000000001, -7.4950000000000001, 33.255000000000003, 4.0],
                     [3.9125000000000001, -8.5075000000000003, 33.547499999999999, 4.0],
                     [5.29, -9.5199999999999996, 33.840000000000003, 4.0],
                     [6.0125000000000002, -11.23, 32.972499999999997, 4.0],
                     [6.7350000000000003, -12.94, 32.104999999999997, 4.0],
                     [8.1799999999999997, -16.359999999999999, 30.370000000000001, 4.0],
                     [6.2649999999999997, -15.289999999999999, 31.190000000000001, 4.0],
                     [4.3499999999999996, -14.220000000000001, 32.009999999999998, 4.0],
                     [3.0899999999999999, -15.385, 33.765000000000001, 4.0],
                     [1.8300000000000001, -16.550000000000001, 35.520000000000003, 4.0],
                     [-0.31, -17.289999999999999, 36.835000000000001, 4.0],
                     [-2.4500000000000002, -18.030000000000001, 38.149999999999999, 4.0],
                     [-4.7750000000000004, -17.289999999999999, 39.850000000000001, 4.0],
                     [-7.0999999999999996, -16.550000000000001, 41.549999999999997, 4.0],
                     [-9.7750000000000004, -15.59, 42.664999999999999, 4.0],
                     [-12.449999999999999, -14.630000000000001, 43.780000000000001, 4.0]]

    xpied, ypied = coord[0], coord[1]
    for i in range(len(Tab_tronc)):
        MaScene.add(Shape(transformation(Sphere(Tab_tronc[i][3] / 200), 1, 1, 1, 0, 0, 0, Tab_tronc[i][0] / 100 + xpied,
                                         Tab_tronc[i][1] / 100 + ypied + Tab_tronc[i][2] / 100 * tan(18. * 3.14 / 180),
                                         Tab_tronc[i][2] / 100), Material(Color3(88, 56, 11))))


def add_assim_chamber(MaScene, coord0=array([0., 0., 0.])):
    diam = 1.5
    epais = 0.05
    Htot = 1.6
    bas = 0.2
    alpha = 3.14 * 55 / 180  # 55 degre
    Lcone = diam / (2 * cos(alpha))
    Hcone = Lcone * sin(alpha)

    ring = Cylinder(diam / 2, epais, False, 15)
    support = quadform(array([-epais / 2., 0., 0.]), array([-epais / 2., 0., Htot]), array([epais / 2., 0., Htot]),
                       array([epais / 2., 0., 0.]))

    o1 = Shape(transformation(ring, 1, 1, 1, 0, 0, 0, coord0[0], coord0[1], coord0[2] + bas),
               Material(Color3(250, 250, 250)))
    o2 = Shape(transformation(ring, 1, 1, 1, 0, 0, 0, coord0[0], coord0[1], coord0[2] + Htot / 3 + bas),
               Material(Color3(250, 250, 250)))
    o3 = Shape(transformation(ring, 1, 1, 1, 0, 0, 0, coord0[0], coord0[1], coord0[2] + 2 * Htot / 3 + bas),
               Material(Color3(250, 250, 250)))
    o4 = Shape(transformation(ring, 1, 1, 1, 0, 0, 0, coord0[0], coord0[1], coord0[2] + Htot + bas),
               Material(Color3(250, 250, 250)))
    o5 = Shape(transformation(ring, 0.66, 0.66, 1, 0, 0, 0, coord0[0], coord0[1], coord0[2] + Hcone / 3 + Htot + bas),
               Material(Color3(250, 250, 250)))
    o6 = Shape(
        transformation(ring, 0.33, 0.33, 1, 0, 0, 0, coord0[0], coord0[1], coord0[2] + 2 * Hcone / 3 + Htot + bas),
        Material(Color3(250, 250, 250)))

    o7 = Shape(transformation(support, 1, 2, 1, 0, 0, 0, coord0[0], coord0[1] + diam / 2, coord0[2] + bas),
               Material(Color3(250, 250, 250)))
    o8 = Shape(transformation(support, 1, 2, 1, 0, 0, 0, coord0[0], coord0[1] - diam / 2., coord0[2] + bas),
               Material(Color3(250, 250, 250)))
    o9 = Shape(transformation(support, 1, 1, 1, 3.14 / 2, 0, 0, coord0[0] - diam / 2, coord0[1], coord0[2] + bas),
               Material(Color3(250, 250, 250)))
    o10 = Shape(transformation(support, 1, 1, 1, 3.14 / 2, 0, 0, coord0[0] + diam / 2, coord0[1], coord0[2] + bas),
                Material(Color3(250, 250, 250)))

    o11 = Shape(transformation(support, 1, 1, Lcone / Htot, 0, 0, 3.14 / 2 - alpha, coord0[0], coord0[1] + diam / 2,
                               coord0[2] + Htot + bas + epais), Material(Color3(250, 250, 250)))
    o12 = Shape(transformation(support, 1, 1, Lcone / Htot, 0, 0, -(3.14 / 2 - alpha), coord0[0], coord0[1] - diam / 2,
                               coord0[2] + Htot + bas + epais), Material(Color3(250, 250, 250)))
    o13 = Shape(
        transformation(support, 1, 2, Lcone / Htot, 3.14 / 2, 0, -(3.14 / 2 - alpha), coord0[0] + diam / 2, coord0[1],
                       coord0[2] + Htot + bas + epais), Material(Color3(250, 250, 250)))
    o14 = Shape(
        transformation(support, 1, 2, Lcone / Htot, 3.14 / 2, 0, 3.14 / 2 - alpha, coord0[0] - diam / 2, coord0[1],
                       coord0[2] + Htot + bas + epais), Material(Color3(250, 250, 250)))

    ls = [o1, o2, o3, o4, o5, o6, o7, o8, o9, o10, o11, o12, o13, o14]
    for obj in ls:
        obj.setName('22000000000')  # can id
        MaScene.add(obj)

    return MaScene


# MaScene = Scene()
# add_assim_chamber(MaScene)
# MonViewer = Viewer
# Viewer.display(MaScene)

def leaf1(l=1.):
    points = Point3Array([Vector3(0, 9.8, 0), Vector3(3.7, 6.3, 0), Vector3(0, 0, 0), Vector3(-3.7, 6.3, 0)])

    indices = Index3Array([Index3(0, 1, 2), Index3(3, 0, 2)])

    f = TriangleSet(points, indices)
    return Scaled(Vector3(0.01 * l, 0.01 * l, 0.01 * l), f)


def soil0(l=1.):
    points = Point3Array([Vector3(0., 0., 0.), Vector3(1., 0., 0.), Vector3(1., 1., 0.), Vector3(0., 1., 0.)])
    indices = Index3Array([Index3(0, 1, 2), Index3(0, 2, 3)])
    f = TriangleSet(points, indices)
    return Scaled(Vector3(l, l, l), f)
